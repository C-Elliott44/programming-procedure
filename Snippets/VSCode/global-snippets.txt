{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Console Log": {
		"prefix": "clog",
		"body": [
			"console.log('$1',$1)"
		],
		"description": "Output to console"
	},
			"Console Log Color": {
			"prefix": "clogc",
			"body": [
				"console.log('%c ${CLIPBOARD}','background: black; color: yellow', ${CLIPBOARD});"
				// console.log('%c SumCertificateFeesTotal ', 'background: black; color: yellow');
				// console.log('%c SumCertificateFeesTotal ', 'background: red; color: white');
				// console.log('%c SumCertificateFeesTotal ', 'background: orange; color: blue');
			],
			"description": "Output to console"
		},
	"Response Write": {
		"prefix": "rw",
		"body": [
			"HttpContext.Current.Response.Write(\"<li>${CLIPBOARD} :\" + ${CLIPBOARD} + \"</li>\");"
		],
		"description": "Output to screen"
	},
	"Response End": {
		"prefix": "re",
		"body": [
			"HttpContext.Current.Response.Write(\"END$1\");",
			"HttpContext.Current.Response.End();"
		],
		"description": "Response End"
	},
	"ToStringOrDefault": {
		"prefix": ".ToString",
		"body": [
			".ToStringOrDefault();"
		],
		"description": "ToStringOrDefault"
	},
	"ToInt32OrDefault": {
		"prefix": ".ToInt",
		"body": [
			".ToInt32OrDefault();"
		],
		"description": "ToInt32OrDefault"
	},
}
